#ifndef SQL_H_
#define SQL_H_

#define CHECK_STRING_LENGTH(s, required_length) \
    _Static_assert((sizeof(s) - 1) == required_length, "String length must be " #required_length)

#define NOTIFICATIONS_TABLE_NAME "notifications"
#define CREATE_NOTIFICATIONS_TABLE \
"CREATE TABLE notifications(" \
    "title TEXT NOT NULL," \
    "created_at INTEGER NOT NULL," \
    "due INTEGER NOT NULL," \
    "checked INTEGER NOT NULL," \
    "reminder INTEGER NOT NULL," \
    "details INTEGER," \
    "PRIMARY KEY(created_at, due)," \
    "FOREIGN KEY(details) REFERENCES details(rowid)" \
");"

#define CREATE_DETAILS_TABLE "CREATE TABLE details(description TEXT)"

#define INSERT_INTO_NOTIFICATIONS "INSERT INTO notifications (title, created_at, due, checked, reminder, details) VALUES (\"%s\", %ld, %ld, %d, %d, %ld);"
CHECK_STRING_LENGTH(INSERT_INTO_NOTIFICATIONS, 116);

#define FIND_FIRST_NEXT_NOTIFICATION "SELECT * FROM notifications WHERE checked == 0 ORDER BY due LIMIT 1;"
CHECK_STRING_LENGTH(FIND_FIRST_NEXT_NOTIFICATION, 68);

#define FIND_ALL_NEXT_NOTIFICATIONS "SELECT * FROM notifications WHERE checked == 0 AND (due - %ld) <= 0 ORDER BY due;"
CHECK_STRING_LENGTH(FIND_ALL_NEXT_NOTIFICATIONS, 81);

#define LONG_FORMAT_PARAM 3
#define LONG 20


// DATA ACCESS QUERIES
// TODO: replace format specifiers with "?"
#define SELECT_ALL_NOTIFICATIONS "SELECT *, ROWID FROM notifications ORDER BY due;"
#define SELECT_ALL_NOTIFICATIONS_BEFORE_TIME "SELECT *, ROWID FROM notifications WHERE (due - ?) <= 0 ORDER BY due;"
#define SELECT_ALL_NOTIFICATIONS_AFTER_TIME "SELECT *, ROWID FROM notifications WHERE (due - %ld) >= 0 ORDER BY due;"
#define SELECT_ALL_NOTIFICATIONS_UNCHECKED "SELECT *, ROWID FROM notifications WHERE checked = 0 ORDER BY due;"
#define SELECT_ALL_NOTIFICATIONS_CHECKED "SELECT *, ROWID FROM notifications WHERE checked = 1 ORDER BY due;"
#define SELECT_ALL_NOTIFICATIONS_UNCHECKED_BEFORE_TIME "SELECT *, ROWID FROM notifications WHERE checked = 0 AND (due - ?) <= 0 ORDER BY due;"
#define SELECT_ALL_NOTIFICATIONS_UNCHECKED_AFTER_TIME "SELECT *, ROWID FROM notifications WHERE checked = 0 AND (due - %ld) >= 0 ORDER BY due;"
#define SELECT_ALL_NOTIFICATIONS_CHECKED_BEFORE_TIME "SELECT *, ROWID FROM notifications WHERE checked = 1 AND (due - %ld) <= 0 ORDER BY due;"
#define SELECT_ALL_NOTIFICATIONS_CHECKED_AFTER_TIME "SELECT *, ROWID FROM notifications WHERE checked = 1 AND (due - %ld) >= 0 ORDER BY due;"

#define SELECT_ALL_NOTIFICATIONS_BEFORE_TIME_BUFFER (sizeof(SELECT_ALL_NOTIFICATIONS_BEFORE_TIME) - LONG_FORMAT_PARAM + LONG)
#define SELECT_ALL_NOTIFICATIONS_AFTER_TIME_BUFFER (sizeof(SELECT_ALL_NOTIFICATIONS_AFTER_TIME) - LONG_FORMAT_PARAM + LONG)
#define SELECT_ALL_NOTIFICATIONS_UNCHECKED_BEFORE_TIME_BUFFER (sizeof(SELECT_ALL_NOTIFICATIONS_UNCHECKED_BEFORE_TIME) - LONG_FORMAT_PARAM + LONG)
#define SELECT_ALL_NOTIFICATIONS_UNCHECKED_AFTER_TIME_BUFFER (sizeof(SELECT_ALL_NOTIFICATIONS_UNCHECKED_AFTER_TIME) - LONG_FORMAT_PARAM + LONG)
#define SELECT_ALL_NOTIFICATIONS_CHECKED_BEFORE_TIME_BUFFER (sizeof(SELECT_ALL_NOTIFICATIONS_CHECKED_BEFORE_TIME) - LONG_FORMAT_PARAM + LONG)
#define SELECT_ALL_NOTIFICATIONS_CHECKED_AFTER_TIME_BUFFER (sizeof(SELECT_ALL_NOTIFICATIONS_CHECKED_AFTER_TIME) - LONG_FORMAT_PARAM + LONG)

// DATA MODIFICATION QUERIES
#define INSERT_INTO_NOTIFICATIONS "INSERT INTO notifications (title, created_at, due, checked, reminder, details) VALUES (?, ?, ?, ?, ?, ?);"

#endif